
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: applicationgroups.orkestra.azure.microsoft.com
spec:
  group: orkestra.azure.microsoft.com
  names:
    kind: ApplicationGroup
    listKind: ApplicationGroupList
    plural: applicationgroups
    singular: applicationgroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ApplicationGroup is the Schema for the applicationgroups API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApplicationGroupSpec defines the desired state of ApplicationGroup
            properties:
              applications:
                description: Applications that make up the application group
                items:
                  description: Application spec and dependency on other applications
                  properties:
                    dependencies:
                      description: Dependencies on other applications by name
                      items:
                        type: string
                      type: array
                    name:
                      description: Name of the application
                      type: string
                    namespace:
                      description: Namespace of the application
                      type: string
                    spec:
                      description: Spec contains the application spec including the
                        chart info and overlay values
                      properties:
                        chart:
                          description: Chart holds the values needed to pull the chart
                          properties:
                            authSecretRef:
                              description: AuthSecretRef is a reference to the auth
                                secret to access a private helm repository
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                            chartPullSecret:
                              description: ChartPullSecret holds the reference to
                                the authentication secret for accessing the Helm repository
                                using HTTPS basic auth. NOT IMPLEMENTED!
                              properties:
                                name:
                                  type: string
                              required:
                              - name
                              type: object
                            git:
                              description: Git URL is the URL of the Git repository,
                                e.g. `git@github.com:org/repo`, `http://github.com/org/repo`,
                                or `ssh://git@example.com:2222/org/repo.git`.
                              type: string
                            name:
                              description: Name is the name of the Helm chart _without_
                                an alias, e.g. redis (for `helm upgrade [flags] stable/redis`).
                              type: string
                            path:
                              description: Path is the path to the chart relative
                                to the repository root.
                              type: string
                            ref:
                              description: Ref is the Git branch (or other reference)
                                to use. Defaults to 'master', or the configured default
                                Git ref.
                              type: string
                            repository:
                              description: RepoURL is the URL of the Helm repository,
                                e.g. `https://kubernetes-charts.storage.googleapis.com`
                                or `https://charts.example.com`.
                              type: string
                            secretRef:
                              description: SecretRef holds the authentication secret
                                for accessing the Git repository (over HTTPS). The
                                credentials will be added to an HTTPS GitURL before
                                the mirror is started.
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              required:
                              - name
                              type: object
                            skipDepUpdate:
                              description: SkipDepUpdate will tell the operator to
                                skip running 'helm dep update' before installing or
                                upgrading the chart, the chart dependencies _must_
                                be present for this to succeed.
                              type: boolean
                            version:
                              description: Version is the targeted Helm chart version,
                                e.g. 7.0.1.
                              type: string
                          type: object
                        groupId:
                          type: string
                        release:
                          description: Release holds the values to apply to the helm
                            release
                          properties:
                            forceUpgrade:
                              description: Force will mark this Helm release to `--force`
                                upgrades. This forces the resource updates through
                                delete/recreate if needed.
                              type: boolean
                            helmVersion:
                              default: v3
                              description: HelmVersion is the version of Helm to target.
                                If not supplied, the lowest _enabled Helm version_
                                will be targeted.
                              enum:
                              - v2
                              - v3
                              type: string
                            targetNamespace:
                              description: TargetNamespace overrides the targeted
                                namespace for the Helm release. The default namespace
                                equals to the namespace of the HelmRelease resource.
                              type: string
                            timeout:
                              description: Timeout is the time to wait for any individual
                                Kubernetes operation (like Jobs for hooks) during
                                installation and upgrade operations.
                              format: int64
                              type: integer
                            values:
                              description: Values holds the values for this Helm release.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            wait:
                              description: Wait will mark this Helm release to wait
                                until all Pods, PVCs, Services, and minimum number
                                of Pods of a Deployment, StatefulSet, or ReplicaSet
                                are in a ready state before marking the release as
                                successful.
                              type: boolean
                          type: object
                        subcharts:
                          description: Subcharts provides the dependency order among
                            the subcharts of the application
                          items:
                            description: DAG contains the dependency information
                            properties:
                              dependencies:
                                description: Dependencies on other applications by
                                  name
                                items:
                                  type: string
                                type: array
                              name:
                                description: Name of the application
                                type: string
                              namespace:
                                description: Namespace of the application
                                type: string
                            type: object
                          type: array
                      required:
                      - chart
                      - release
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: ApplicationGroupStatus defines the observed state of ApplicationGroup
            properties:
              checksums:
                additionalProperties:
                  type: string
                description: Checksums for each application are calculated from the
                  application spec The status/metadata information is ignored
                type: object
              error:
                description: Error string from errors during reconciliation
                type: string
              phase:
                description: Phase is the reconciliation phase
                type: string
              status:
                description: Applications status
                items:
                  description: ApplicationStatus shows the current status of the application
                    helm release
                  properties:
                    error:
                      description: Error string from the error during reconciliation
                        (if any)
                      type: string
                    name:
                      description: Name of the application
                      type: string
                    phase:
                      description: Phase reflects the current state of the HelmRelease
                      enum:
                      - ChartFetched
                      - ChartFetchFailed
                      - Installing
                      - Upgrading
                      - Deployed
                      - DeployFailed
                      - Testing
                      - TestFailed
                      - Tested
                      - Succeeded
                      - Failed
                      - RollingBack
                      - RolledBack
                      - RollbackFailed
                      type: string
                    staged:
                      description: Staged if true denotes that the chart/subchart
                        has been pushed to the staging helm repo
                      type: boolean
                    subcharts:
                      additionalProperties:
                        description: ChartStatus shows the current status of the Application
                          Reconciliation process
                        properties:
                          error:
                            description: Error string from the error during reconciliation
                              (if any)
                            type: string
                          phase:
                            description: Phase reflects the current state of the HelmRelease
                            enum:
                            - ChartFetched
                            - ChartFetchFailed
                            - Installing
                            - Upgrading
                            - Deployed
                            - DeployFailed
                            - Testing
                            - TestFailed
                            - Tested
                            - Succeeded
                            - Failed
                            - RollingBack
                            - RolledBack
                            - RollbackFailed
                            type: string
                          staged:
                            description: Staged if true denotes that the chart/subchart
                              has been pushed to the staging helm repo
                            type: boolean
                          version:
                            description: Version of the chart/subchart
                            type: string
                        type: object
                      description: Subcharts contains the subchart chart status
                      type: object
                    version:
                      description: Version of the chart/subchart
                      type: string
                  required:
                  - name
                  type: object
                type: array
              update:
                description: Update is an internal flag used to trigger a workflow
                  update
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
