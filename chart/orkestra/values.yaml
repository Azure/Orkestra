# namespace: &namespace orkestra
serviceAccount: &serviceAccount orkestra

replicaCount: 1

chartStorePath: "/etc/orkestra/charts/pull"

image:
  repository: azureorkestra/orkestra
  pullPolicy: Always 
  tag: "v0.5.1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: *serviceAccount

# repositories:
#   - name: staging 
#     url: "http://orkestra-chartmuseum.orkestra:8080"
#   - name: datawire 
#     url: "https://www.getambassador.io/helm"
#   - name: bookinfo 
#     url: "https://nitishm.github.io/istio-bookinfo-chart"
    # username: admin
    # password: password
    # authHeader: 'Authorization: Basic HTTPBASICAUTHCREDS'
    # caFile: /path/to/ca/file
    # certFile: /path/to/cert/file
    # keyFile: /path/to/key/file
    # insecureSkipVerify: false

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}

remediation:
  disabled: false

# set to dev mode until MVP
cleanup:
  enabled: false

# set to dev mode until MVP
debug:
  level: 5


# Dependency overlay values
chartmuseum:
  interval: 5m
  env:
    open:
      DISABLE_API: false

argo:
  images:
    pullPolicy: IfNotPresent

  init:
    serviceAccount: *serviceAccount

  workflow:
    # namespace: *namespace
    serviceAccount:
      name: *serviceAccount
    rbac:
      enabled: false

  controller:
    # serviceAccount: *serviceAccount
    name: workflow-controller
    # workflowNamespaces:
      # - *namespace
    containerRuntimeExecutor: k8sapi # Most Secure - https://argoproj.github.io/argo-workflows/workflow-executors/#kubernetes-api-k8sapi

  server:
    enabled: true
    name: argo-server
    serviceAccount: *serviceAccount
    createServiceAccount: false

helm-controller:
  enabled: true
  serviceAccount:
    create: false
    name: *serviceAccount 
  source-controller:
    serviceAccount:
      create: false
      name: *serviceAccount
